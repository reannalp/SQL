# In this SQL I am querying a complex database to quantify statistics relating to customer and order data. 

-- How many orders were placed in January?
SELECT COUNT(orderID)
FROM JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID';

-- How many of those orders were for an iPhone?
SELECT COUNT(orderID)
FROM JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID'
AND Product LIKE '%iPhone%';

-- Select the customer account numbers for all the orders that were placed in February
SELECT DISTINCT customers.acctnum
FROM customers
JOIN FebSales
    ON customers.order_id = FebSales.orderID
WHERE length(customers.order_id) = 6
AND customers.order_id <> 'Order ID';

-- Which product was the cheapest one sold in January, and what was the price? 
SELECT DISTINCT product, price 
FROM JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID'
GROUP BY Product
ORDER BY Min(price) LIMIT 1;

-- What is the total revenue for each product sold in January?
SELECT product, SUM(quantity)*price AS revenue
FROM JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID'
GROUP BY product;

-- Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT product, quantity, SUM(quantity)*price AS revenue
FROM FebSales
WHERE length(orderid) = 6
AND location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY product;

-- How many customers ordered more than 2 products at a time, and what was the average amount spent for those customers? 
SELECT count(DISTINCT customers.acctnum), avg(quantity)*price
FROM FebSales
LEFT JOIN customers
    ON customers.order_id = FebSales.orderID
WHERE FebSales.Quantity > 2
AND length(orderID) = 6;

-- Find all the products with prices ending in .99
SELECT distinct Product, Price
FROM BIT_DB.FebSales 
WHERE Price like '%.99';

-- List all the products sold in Los Angeles in February, and include how many of each were sold. 
SELECT product, sum(quantity)
FROM FebSales
WHERE location LIKE '%Los Angeles%'
GROUP BY product;

-- Which locations in New York received at least 3 orders in January, and how many orders did they each receive?
SELECT DISTINCT location, COUNT(orderID)
FROM JanSales
WHERE location LIKE '%NY%' 
AND length(orderid) = 6 
AND orderid <> 'Order ID'
Group BY location HAVING COUNT(orderID) > 2;

-- How many of each type of headphone were sold in February?
SELECT DISTINCT product, count(product) AS sold
FROM FebSales
WHERE product LIKE '%headphone%'
AND length(orderid) = 6 
AND orderid <> 'Order ID'
GROUP BY product;

-- What was the average amount spent per account in February? 
SELECT DISTINCT AVG(price*quantity) AS 'avg spent'
FROM FebSales
JOIN customers
    ON customers.order_id = FebSales.orderID
WHERE length(orderid) = 6 
AND orderid <> 'Order ID';

-- What was the average quantity of products purchased per account in February?
SELECT ROUND(AVG(quantity)) AS 'average quantity'
FROM FebSales
JOIN customers
    ON customers.order_id = FebSales.orderID
WHERE length(orderid) = 6
AND orderid <> 'Order ID';

-- Which product brought in the most revenue in January and how much revenue did it bring in total? 
SELECT product, SUM(quantity*price)
FROM JanSales
WHERE length(orderid) = 6
AND orderid <> 'Order ID'
GROUP BY product
ORDER BY SUM(quantity*price) DESC 
LIMIT 1;
