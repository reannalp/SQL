# For this project I downloaded a dataset of the top 50 Spotify songs in 2021 from Kaggle: https://www.kaggle.com/equinxx/spotify-top-50-songs-in-2021
# I created a table to insert Spotify data into, and I performed analytics on the data using SQL. 

-- Create the table to store the Spotify Data
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL );

# I then inserted the Spotify Data .csv into the table in SQLiteStudio and explored the data.

-- let's see which tracks are the most popular
SELECT artist_name, track_name FROM spotifydata ORDER BY popularity DESC;

-- What is the average loudness of songs in the top 10 most popular?
SELECT AVG(loudness) AS 'Top 10: Average Loudness'
FROM (SELECT loudness FROM spotifydata ORDER BY popularity DESC LIMIT 10);
-- Comparatively, here is the overall average loudness. 
SELECT AVG(loudness) FROM spotifydata;

-- Which artists are represented more than once?
SELECT artist_name
FROM spotifydata
GROUP BY artist_name HAVING count(track_id)>1;

-- What's the shortest song?
SELECT track_name, artist_name, MIN(time(duration_ms/1000, 'unixepoch')) AS duration
FROM spotifydata;

# Find who the "Top Stars" are 
-- Here I use a CTE to calculate and store average popularity 
WITH pop_average AS (
 SELECT spotifydata.artist_name,
 AVG(spotifydata.popularity) AS average_pop
 FROM spotifydata
 GROUP BY spotifydata.artist_name
)
-- display the artist name, average popularity, and a label showing they're a 'Top Star'
SELECT artist_name, average_pop, 'Top Star' AS label
FROM pop_average
WHERE average_pop >=90;
